---
- name: Build Docker images for 'playwithansible' project
  hosts: localhost
  gather_facts: no

  vars: 
    github_url_ansible_versions: "https://raw.githubusercontent.com/playwithansible/playwithansible-cli/v{{ pwa_version }}/app/data/ansible_versions.yml"
    github_url_distribution_versions: "https://raw.githubusercontent.com/playwithansible/playwithansible-cli/v{{ pwa_version }}/app/data/distribution_versions.yml"
    registry: ghcr.io
    namespace: playwithansible
    pwa_version: 0.2.4
    img_ansible: "{{ registry }}/{{ namespace }}/ansible-{{ version }}:{{ pwa_version }}"
    img_distribution: "{{ registry }}/{{ namespace }}/{{ item.name }}:{{ pwa_version }}"
    img_webide: "{{ registry }}/{{ namespace }}/webide:{{ pwa_version }}" 
    webide:
      ansible_version: "{{ ansible_versions | last }}"
      theia_version: 1.5.0

  tasks:
  
    - name: Get Ansible Versions from 'playwithansible' project on github
      get_url:
        url: "{{ github_url_ansible_versions }}"
        dest: /tmp/ansible_versions.yml

    - name: Get Distribution Versions from 'playwithansible' project on github
      get_url:
        url: "{{ github_url_distribution_versions }}"
        dest: /tmp/distribution_versions.yml

    - include_vars: /tmp/ansible_versions.yml
    
    - include_vars: /tmp/distribution_versions.yml

    - name: "Build Ansible images {{ ansible_versions | join(', ') }}"
      # debug: 
      #   msg: "docker build --build-arg ansible_version={{ version }} -t {{ img_ansible }} ansible"
      shell: |
        docker build --build-arg ansible_version={{ version }} -t {{ img_ansible }} ansible
      loop:
        "{{ ansible_versions }}"
      loop_control:
        loop_var: version

    - name: "Build OS images ({{ distribution_versions | length }} images)"
      # debug: 
      #   msg: "docker build --build-arg version={{ item.version }} -t {{ img_distribution }} {{ item.distribution }}"
      shell: |
        docker build --build-arg version={{ item.version }} -t {{ img_distribution }} {{ item.distribution }}
      loop:
        "{{ distribution_versions }}"

    # - name: "Build Web IDE image ({{ img_webide }})"
    #   debug:
    #     msg: "docker build --build-arg ansible_version={{ webide.ansible_version }} --build-arg theia_version={{ webide.theia_version }} -t {{ img_webide }} webide"
